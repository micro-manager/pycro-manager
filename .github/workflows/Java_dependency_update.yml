# When NDTiff, AcqEngJ, or NDViewer update, a automatic push
# to the *-update branch of pycro-manager will be generated
# that updates the version in their POM.xml files
# This script should then:
#   1) Update the minor or patch version of PMJava accordingly
#   2) Open a pull request from the dependency branch to the main branch to 
#      trigger automatic build of pycro-manager Java

name: Pycro-ManagerJava update

on:
  push:
    branches:
      - ndtiff-update
      - acqengj-update
      - ndviewer-update
    paths:
       - 'java/pom.xml'

# ensure that only one instance of this action can run at a time so weird
# stuff with updates colliding doesnt happen
concurrency: dependency_update

jobs:
  update-pycromanger-java:
    runs-on: ubuntu-latest
    steps:
    
    - name: Get Token
      id: get_workflow_token      
      uses: getsentry/action-github-app-token@v2
      with:
        app_id: ${{ secrets.MM_PR_BOT_APP_ID }}
        private_key: ${{ secrets.MM_PR_BOT_PRIVATE_KEY }}
    
    - name: Checkout Pycro-Manager dependencies branch
      uses: actions/checkout@v3
      env:
        GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        
      with:
        path: ''
        repository: micro-manager/pycro-manager
        fetch-depth: 0 # check out all branches so main can be merged
        ref:  ${{ github.ref_name }}  # Use matching branch
        
    - name: update-version
      run: |
        # fast forward to get code updates on main branch
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "PycroManager-Bot"
        git config pull.rebase false
        pip install semantic_version
        python build_automation/update_PycroManagerJava.py
        
    - name: commit
      run: |
        git commit -am "update PycromanagerJava version in response to ${{ github.ref_name }} (Created by Github action)"
        
        
    - name: push
      run: |
        # update the version of PycroManagerJava (on this *-update branch )
        # Seems like this would trigger an infinite loop because this push triggers this action but for some reason that doesnt happen
        git push --set-upstream origin  ${{ github.ref_name }}
 
 
    - name: create pull request
      # make a PR from *-update branch of PM to main branch
      env:
        GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        
      run: |
        gh pr create -H dependency-update -B main --title 'Java dependency auto-update' --body 'Created by Github action (https://github.com/micro-manager/pycro-manager/blob/dependency-update/.github/workflows/Java_dependency_update.yml)'
        gh pr merge --auto --merge
        
        PR_URL=$(gh pr create -H ${{ github.ref_name }} -B main --title 'Update PycroManagerJava version' --body 'As a result of java dependency update (Created by Github action)')
        echo "Created pull request $PR_URL"
        
        # supposedly you can use --delete-branch here, but as of 2-1-23 it doesn't work
        gh pr merge $PR_URL --auto --merge

